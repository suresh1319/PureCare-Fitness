<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - PureCare Fitness</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .profile-container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        .profile-header {
            text-align: center;
            margin-bottom: 30px;
            animation: fadeIn 1s ease-in-out;
        }

        .avatar-container {
            width: 150px;
            height: 150px;
            margin: 0 auto 20px;
            position: relative;
            animation: slideDown 0.5s ease-out;
        }

        .avatar {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #bce3d7;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #f0f0f0;
            transition: transform 0.3s ease;
        }

        .avatar:hover {
            transform: scale(1.05);
        }

        .profile-name {
            font-size: 24px;
            color: #333;
            margin-bottom: 10px;
        }

        .profile-role {
            color: #666;
            font-size: 16px;
            margin-bottom: 20px;
        }

        .profile-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            padding: 20px;
        }

        .info-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            animation: fadeIn 0.5s ease-in-out;
            transition: transform 0.3s ease;
        }

        .info-card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #bce3d7;
        }

        .card-header i {
            font-size: 24px;
            color: #bce3d7;
            margin-right: 10px;
        }

        .card-header h2 {
            color: #333;
            font-size: 20px;
            margin: 0;
        }

        .info-item {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 5px;
            background: #f9f9f9;
            transition: background-color 0.3s ease;
        }

        .info-item:hover {
            background: #f0f0f0;
        }

        .info-label {
            font-weight: bold;
            color: #666;
            margin-bottom: 5px;
        }

        .info-value {
            color: #333;
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-top: 30px;
            animation: fadeIn 0.5s ease-in-out;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-value {
            font-size: 36px;
            color: #bce3d7;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .stat-label {
            color: #666;
            font-size: 14px;
        }

        .edit-btn {
            display: inline-block;
            padding: 10px 20px;
            background: #bce3d7;
            color: #000;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
            text-decoration: none;
            margin-top: 20px;
        }

        .edit-btn:hover {
            background: #9fd1c2;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideDown {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @media (max-width: 768px) {
            .profile-content {
                grid-template-columns: 1fr;
            }
            
            .stats-container {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <div class="profile-header">
            <div class="avatar-container">
                <img src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(user.name) %>&background=bce3d7&color=fff&size=150" alt="Profile Avatar" class="avatar">
            </div>
            <h1 class="profile-name"><%= user.name %></h1>
            <p class="profile-role"><%= user.role %></p>
        </div>

        <div class="profile-content">
            <div class="info-card">
                <div class="card-header">
                    <i class="fas fa-user"></i>
                    <h2>Personal Information</h2>
                </div>
                <div class="info-item">
                    <div class="info-label">Name</div>
                    <div class="info-value"><%= user.name %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Email</div>
                    <div class="info-value"><%= user.email %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Phone</div>
                    <div class="info-value"><%= user.phone %></div>
                </div>
            </div>

            <div class="info-card">
                <div class="card-header">
                    <i class="fas fa-calendar-alt"></i>
                    <h2>Account Information</h2>
                </div>
                <div class="info-item">
                    <div class="info-label">Member Since</div>
                    <div class="info-value"><%= new Date(user.createdAt).toLocaleDateString() %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Last Updated</div>
                    <div class="info-value"><%= new Date(user.updatedAt).toLocaleDateString() %></div>
                </div>
            </div>
        </div>

        <div class="stats-container">
            <div class="stat-card">
                <div class="stat-value">0</div>
                <div class="stat-label">Workouts</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">0</div>
                <div class="stat-label">Achievements</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">0</div>
                <div class="stat-label">Goals</div>
            </div>
        </div>

        <div style="text-align: center;">
            <a href="/profile/edit" class="edit-btn">Edit Profile</a>
        </div>
    </div>

    <script>
        // Animate stats counting
        const stats = document.querySelectorAll('.stat-value');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const target = entry.target;
                    const value = parseInt(target.textContent);
                    let current = 0;
                    const duration = 2000; // 2 seconds
                    const increment = value / (duration / 16); // 60fps

                    const timer = setInterval(() => {
                        current += increment;
                        if (current >= value) {
                            target.textContent = value;
                            clearInterval(timer);
                        } else {
                            target.textContent = Math.floor(current);
                        }
                    }, 16);
                }
            });
        }, { threshold: 0.5 });

        stats.forEach(stat => observer.observe(stat));
    </script>
</body>
</html> 