<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile - PureCare Fitness</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .edit-profile-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        .edit-profile-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .edit-profile-header h1 {
            color: #333;
            margin-bottom: 10px;
        }

        .avatar-container {
            width: 150px;
            height: 150px;
            margin: 0 auto 20px;
            position: relative;
        }

        .avatar {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #bce3d7;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #f0f0f0;
        }

        .edit-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            color: #666;
            margin-bottom: 5px;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #bce3d7;
        }

        .form-actions {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
            text-decoration: none;
            text-align: center;
        }

        .btn-save {
            background: #bce3d7;
            color: #000;
        }

        .btn-cancel {
            background: #f0f0f0;
            color: #333;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-save:hover {
            background: #9fd1c2;
        }

        .btn-cancel:hover {
            background: #e0e0e0;
        }

        .error-message {
            color: #ff4444;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .success-message {
            color: #00C851;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="edit-profile-container">
        <div class="edit-profile-header">
            <div class="avatar-container">
                <img src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(user.name) %>&background=bce3d7&color=fff&size=150" alt="Profile Avatar" class="avatar">
            </div>
            <h1>Edit Profile</h1>
        </div>

        <form id="editProfileForm" class="edit-form">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" value="<%= user.name %>" required>
                <div class="error-message" id="nameError"></div>
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" value="<%= user.email %>" required>
                <div class="error-message" id="emailError"></div>
            </div>

            <div class="form-group">
                <label for="phone">Phone</label>
                <input type="tel" id="phone" name="phone" value="<%= user.phone %>" required>
                <div class="error-message" id="phoneError"></div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-save">Save Changes</button>
                <a href="/profile" class="btn btn-cancel">Cancel</a>
            </div>
        </form>
    </div>

    <script>
        document.getElementById('editProfileForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Reset error messages
            document.querySelectorAll('.error-message').forEach(el => el.style.display = 'none');
            
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value
            };

            try {
                const response = await fetch('/profile/edit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();

                if (response.ok) {
                    // Show success message
                    const successMessage = document.createElement('div');
                    successMessage.className = 'success-message';
                    successMessage.textContent = 'Profile updated successfully!';
                    successMessage.style.display = 'block';
                    document.querySelector('.form-actions').before(successMessage);
                    
                    // Redirect after 1.5 seconds
                    setTimeout(() => {
                        window.location.href = '/profile';
                    }, 1500);
                } else {
                    // Show error messages
                    if (data.errors) {
                        Object.keys(data.errors).forEach(field => {
                            const errorElement = document.getElementById(`${field}Error`);
                            if (errorElement) {
                                errorElement.textContent = data.errors[field];
                                errorElement.style.display = 'block';
                            }
                        });
                    }
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
</body>
</html> 